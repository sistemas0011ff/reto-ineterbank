version: "3.7"

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my-network

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD", "kafka-topics", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 30s
      retries: 10
    networks:
      - my-network

  create-kafka-topics:
    image: confluentinc/cp-kafka:5.5.3
    depends_on:
      - kafka
    entrypoint: >
      sh -c '
      until kafka-topics --zookeeper zookeeper:2181 --list; do
        echo "Esperando a que Kafka esté listo...";
        sleep 10;
      done;
      echo "Kafka está listo, intentando crear un tópico de prueba...";
      kafka-topics --create --topic test-topic --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181 || true;
      sleep 20;
      echo "Creando los tópicos reales...";
      kafka-topics --create --topic trx-topic --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181;
      sleep 5;	
      kafka-topics --create --topic another-topic --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181;
      sleep 5;
      kafka-topics --create --topic topic-trx-validation-result --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181;
      echo "Tópicos creados.";
      kafka-topics --zookeeper zookeeper:2181 --list;
      '
    networks:
      - my-network

  transaction-service:
    build: ./TransactionService
    ports:
      - "8880:8880"
    depends_on:
      - postgres
      - kafka
      - create-kafka-topics
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - my-network

  antifraud-service:
    build: ./AntiFraudService
    ports:
      - "8881:8881"
    depends_on:
      - kafka
      - create-kafka-topics
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - my-network

volumes:
  postgres-data:

networks:
  my-network:
    driver: bridge